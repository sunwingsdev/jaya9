{"ast":null,"code":"var _jsxFileName = \"E:\\\\jaya 9 - Copy\\\\src\\\\components\\\\Profile\\\\Profile.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = ({\n  username\n}) => {\n  // Log the username to check if it's being passed correctly\n  console.log(\"Received username:\", username);\n\n  // Get the first letter of the username and capitalize it\n  const firstLetter = username ? username.charAt(0).toUpperCase() : \"N/A\";\n  console.log(\"First Letter:\", firstLetter);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mx-auto max-w-2xl flex items-center gap-4 p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-start gap-4 p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-16 h-16 bg-black text-common-orange flex items-center justify-center text-3xl font-bold rounded-full\",\n        children: firstLetter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-white text-xl font-semibold\",\n        children: [username || \"No Username\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Profile","username","console","log","firstLetter","charAt","toUpperCase","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/jaya 9 - Copy/src/components/Profile/Profile.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nconst Profile = ({ username }) => {\r\n    // Log the username to check if it's being passed correctly\r\n    console.log(\"Received username:\", username);\r\n\r\n    // Get the first letter of the username and capitalize it\r\n    const firstLetter = username ? username.charAt(0).toUpperCase() : \"N/A\";\r\n    console.log(\"First Letter:\", firstLetter);\r\n\r\n    return (\r\n        <div className='mx-auto max-w-2xl flex items-center gap-4 p-4'>\r\n            <div className='flex items-center justify-start gap-4 p-4'>\r\n                <div className='w-16 h-16 bg-black text-common-orange flex items-center justify-center text-3xl font-bold rounded-full'>\r\n                    {firstLetter}\r\n                </div>\r\n                <span className='text-white text-xl font-semibold'>\r\n                    {username || \"No Username\"} {/* Default text if username is not available */}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAC9B;EACAC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,QAAQ,CAAC;;EAE3C;EACA,MAAMG,WAAW,GAAGH,QAAQ,GAAGA,QAAQ,CAACI,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAG,KAAK;EACvEJ,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEC,WAAW,CAAC;EAEzC,oBACIL,OAAA;IAAKQ,SAAS,EAAC,+CAA+C;IAAAC,QAAA,eAC1DT,OAAA;MAAKQ,SAAS,EAAC,2CAA2C;MAAAC,QAAA,gBACtDT,OAAA;QAAKQ,SAAS,EAAC,wGAAwG;QAAAC,QAAA,EAClHJ;MAAW;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eACNb,OAAA;QAAMQ,SAAS,EAAC,kCAAkC;QAAAC,QAAA,GAC7CP,QAAQ,IAAI,aAAa,EAAC,GAAC;MAAA;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACC,EAAA,GApBIb,OAAO;AAsBb,eAAeA,OAAO;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}